{"version":3,"sources":["component/Button.js","component/Header.js","component/Task.js","component/Tasks.js","component/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onBtnClick","className","style","backgroundColor","onClick","Header","showAdd","task","onDelete","onReminderClick","reminder","onDoubleClick","id","name","cursor","Tasks","map","index","Task","AddTask","onAddTask","useState","setName","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTask","showAddTask","setShowAddTask","tasks","Math","floor","random","newTask","console","log","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31cb856b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ text, color, onBtnClick }) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={onBtnClick}\r\n      >\r\n        {text}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\nconst Header = ({ onBtnClick, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Todo List</h1>\r\n      <Button color={showAdd ? \"red\" : \"green\"} text={showAdd ? \"Close\" : \"Add\"} onBtnClick={onBtnClick} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const task = ({ task, onDelete, onReminderClick }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? \"reminder\" : \"\"}`}>\r\n      <h3 onDoubleClick={() => onReminderClick(task.id)}>\r\n        {task.name}\r\n        <i\r\n          className=\"fas fa-times\"\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        ></i>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ task, onDelete, onReminderClick }) => {\r\n  return (\r\n    <>\r\n      {task.map((task, index) => (\r\n        <Task\r\n          key={index}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onReminderClick={onReminderClick}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAddTask }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const Submitted = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      alert(\"Please enter the task\");\r\n      return;\r\n    }\r\n    onAddTask({ name, reminder });\r\n    setName(\"\");\r\n    setReminder(false);\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={Submitted}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a Task\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState } from \"react\";\nimport Header from \"./component/Header\";\nimport Tasks from \"./component/Tasks\";\nimport AddTask from \"./component/AddTask\";\nfunction App() {\n  const [task, setTask] = useState([\n    {\n      name: \"sss\",\n      reminder: true,\n      id: 1,\n    },\n    {\n      name: \"saad\",\n      reminder: false,\n      id: 2,\n    },\n  ]);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const onAddTask = (tasks) => {\n    const id = Math.floor(Math.random() * 10) + 1;\n    const newTask = { id, ...tasks };\n    setTask([...task, newTask]);\n    console.log(newTask);\n  };\n\n  const deleteTask = (id) => {\n    setTask(task.filter((task) => task.id !== id));\n  };\n\n  const onReminder = (id) => {\n    setTask(\n      task.map((task) =>\n        task.id == id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        onBtnClick={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAddTask={onAddTask} />}\n      {task.length > 0 ? (\n        <Tasks task={task} onDelete={deleteTask} onReminderClick={onReminder} />\n      ) : (\n        \"No Task To Show\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}